<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * QcmRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QcmRepository extends EntityRepository
{
    /**
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getOneRandomPublishedQcm()
    {
        $count = $this->createQueryBuilder('q')
            ->select('COUNT(q)')
            ->where('q.published = true')
            ->getQuery()
            ->getSingleScalarResult();


        return $this->createQueryBuilder('q')
            ->where('q.published = true')
            ->setFirstResult(rand(0, $count - 1))
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleResult();
    }

    /**
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getOneRandomPublishedQcmByCategories($categories)
    {
        $query = $this->createQueryBuilder('q')
            ->join('q.categories', 'c')
            ->select('COUNT(q)');

        foreach ($categories as $category){
            $query->orWhere($query->expr()->andX(
                    $query->expr()->eq('c.id', $category->getId()),
                    $query->expr()->eq('q.published', true)
                ));
        }

        $count = $query->getQuery()->getSingleScalarResult();

        $finalQuery = $this->createQueryBuilder('q')
            ->join('q.categories', 'c');

        foreach ($categories as $category){
            $finalQuery->orWhere($query->expr()->andX(
                $finalQuery->expr()->eq('c.id', $category->getId()),
                $finalQuery->expr()->eq('q.published', true)
            ));
        }

        return $finalQuery->setFirstResult(rand(0, $count - 1))
            ->setMaxResults(1)
            ->getQuery()
            ->getSingleResult();

    }
}
